---
title: "check_men_gymnastics"
format: pdf
editor: visual
---

## Setting up the Environment

```{r}
setClass(
  "GymnasticSimulation",
  representation(
    teamSummary = "data.frame",
    teamAllAround = "data.frame",
    indivAllAround = "data.frame",
    VT = "data.frame",
    SR = "data.frame",
    PH = "data.frame", 
    PB = "data.frame", 
    HB = "data.frame",
    FX = "data.frame"
  )
)

# Create a constructor function
GymnasticSimulation <- function(teamSummary = data.frame(),
                                teamAllAround = data.frame(),
                                indivAllAround = data.frame(),
                                VT = data.frame(),
                                SR = data.frame(),
                                PH = data.frame(), 
                                PB = data.frame(), 
                                HB = data.frame(),
                                FX = data.frame()
                              
                                 ) {
  new("GymnasticSimulation",
      teamSummary = teamSummary,
      teamAllAround = teamAllAround,
      indivAllAround = indivAllAround,
      VT = VT,
      SR = SR,
      PH = PH,
      PB = PB, 
      HB = HB, 
      FX = FX)
}
```

## Team 1

```{r}
men_team_sim1 <- readRDS("men_team_sim1.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim1)){
  team_summary <- men_team_sim1[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

## Men 2

```{r}
men_team_sim2 <- readRDS("men_team_sim2.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim2)){
  team_summary <- men_team_sim2[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

## Team 3

```{r}
men_team_sim3 <- readRDS("men_team_sim3.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim3)){
  team_summary <- men_team_sim3[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team 4

```{r}
men_team_sim4 <- readRDS("men_team_sim4.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim4)){
  team_summary <- men_team_sim4[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team 5

```{r}
men_team_sim5 <- readRDS("men_team_sim5.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim5)){
  team_summary <- men_team_sim5[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team 6

```{r}
men_team_sim6 <- readRDS("men_team_sim6.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim6)){
  team_summary <- men_team_sim6[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team 7

```{r}
men_team_sim7 <- readRDS("men_team_sim7.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim7)){
  team_summary <- men_team_sim7[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team 8

```{r}
men_team_sim8 <- readRDS("men_team_sim8.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim8)){
  team_summary <- men_team_sim8[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team 9

```{r}
men_team_sim9 <- readRDS("men_team_sim9.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim9)){
  team_summary <- men_team_sim9[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

##Team10

```{r}
men_team_sim10 <- readRDS("men_team_sim10.rds")
```

```{r}
winning_countries <- c()

for (i in seq_along(men_team_sim10)){
  team_summary <- men_team_sim10[[i]]@teamSummary
  
  top_countries <- team_summary %>%
    arrange(desc(total_medals))
  
  winning_country = top_countries$clean_country[1]
  
  if(winning_country == "Other"){
    winning_country = top_countries$clean_country[2]
  }
  
  
  winning_countries <- c(winning_countries, winning_country)
}
```

```{r}
country_counts <- table(winning_countries)
country_counts
```

## Analyzing the winning team: Team 7

```{r}
team_summary <- men_team_sim7[[1]]@teamSummary

winning_men_team <- team_summary$athletes[team_summary$clean_country == "USA"]

winning_men_team
```

```{r}
# finding top performance within men_team_sim7

top_team_USA_medals_m <- vector("list", length = 300)

for (i in seq_along(top_team_USA_medals_m)) {
  summaryTeam <- men_team_sim7[[i]]@teamSummary
  top_team_USA_medals_m[i] <- summaryTeam$total_medals[summaryTeam$clean_country == "USA"]
}

top_team_USA_medals_m = unlist(top_team_USA_medals_m)

topteam_and_indices_m <- order(top_team_USA_medals_m, decreasing = TRUE)[1]
topteam_and_indices_m

```

```{r}
first_medal_m <- men_team_sim7[[252]]@teamSummary
```

```{r}
aggregated_heatmap_data_men <- data.frame(Country = character(), Event = character(), Medals = numeric(), stringsAsFactors = FALSE)

# Loop through simulations
for (i in seq_along(men_team_sim7)) {
  # Access the team_summary_dataframe from the current simulation
  team_summary <- men_team_sim7[[i]]@teamSummary
  
  # Identify individual event columns (assuming they have the "_Medal" suffix)
  event_columns <- grep("_medal$", names(team_summary), value = TRUE)
  
  # Aggregate medals across events for each country in the current simulation
  aggregated_data <- aggregate(team_summary[, c(event_columns, "total_medals")], by = list(Country = team_summary$clean_country), sum)
  
  # Append the aggregated data to the overall data frame
  aggregated_heatmap_data_men <- rbind(aggregated_heatmap_data, aggregated_data)
}
```

```{r}
long_format_data_men <- aggregated_heatmap_data_men %>%
  select(-c("total_medals")) %>%
  gather(key = "Event", value = "Medals", -Country)
```

```{r}
ggplot(long_format_data_men, aes(x = Country, y = Event, fill = Medals)) +
  geom_tile() +
   scale_fill_gradient(low = "darkblue", high = "gold", limits = c(0, max(long_format_data_men$Medals))) +
  labs(title = "Aggregated Country Performance Across Events",
       x = "Country",
       y = "Event",
       fill = "Medals") +
  theme_minimal()
```

MEN'S RESULTS TABLE:

Best Simulated Outcome for Chosen Team:

```{=latex}

\newcommand{\highlight}[1]{\colorbox{yellow}{#1}}

\begin{table}[htbp]
  \caption{Men's Artistic Gymnastics - Best Simulated Outcome for Chosen Team USA}
  \medskip
  \small
  \begin{tabular}{l|l|l|l}
    \multicolumn{1}{c}{\textbf{Event}} & \multicolumn{1}{c}{\textbf{Gold}} & \multicolumn{1}{c}{\textbf{Silver}} & \multicolumn{1}{c}{\textbf{Bronze}} \\
    \hline
    Team All-Around & China & USA & Italy \\
    \hline
    Individual All-Around & \highlight{USA (Brody Malone)} & \highlight{USA (Asher Hong)} & China (Xingyu Lan) \\
    \hline
    Vault & Great Britain (Jake Jarman) & Philippines (Carlos Yulo) & Ukraine (Nazar Chepurnyi) \\
    \hline
    Still Rings & \highlight{USA (Asher Hong)} & Greece (Eleftherios Petrounias) & China (Xingyu Lan) \\
    \hline
    Pommel Horse & \highlight{USA (Patrick Hoopes)} & Kazakhstan (Nariman Kurbanov) & Canada (Zachary Clay) \\
    \hline
    Parallel Bars & Philippines (Carlos Yulo) & Germany (Lukas Dauser) & Japan (Shinnosuke Oka) \\
     \hline
    High Bar & China (Hao Tian) & Cyprus (Marios Georgiou) & Japan (Shinnosuke Oka) \\
    \hline
    Floor Exercise & \highlight{USA (Brody Malone)} & Cuba (Alejandro De) & Philippines (Carlos Yulo) \\

  \end{tabular}
  
  \label{tab:gymnastics_medals}
\end{table}

  \small
  \textbf{Team USA Athletes: Brody Malone, Asher Hong, Patrick Hoopes, Paul Juda, Colt Walker} \\
  \textbf{Team USA Medal Count:} 6 \\
  \textbf{Team USA Weighted Medal Count:} 16 (where Gold = 3, Silver = 2, Bronze = 1) \\
  \textbf{Team USA Medal Breakdown:} 4 Gold, 2 Silver, 0 Bronze

```
