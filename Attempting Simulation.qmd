---
title: "Attempting Simulation"
format: pdf
editor: visual
---

```{r}
world_elites <- df_women_c %>%
  filter(competition_scope == "World")%>%
  filter(Round != "TeamFinal")%>%
  filter(Round != "TeamQual")%>%
  filter(Rank <= 10)%>%
  distinct(clean_name, clean_country)


```

```{r}
other_elites <- df_women_c %>%
  filter(competition_scope != "World")%>%
  filter(Round != "TeamFinal")%>%
  filter(Round != "TeamQual")%>%
  filter(Rank <= 3)%>%
  distinct(clean_name, clean_country)


```

```{r}

all_elites <- full_join(world_elites, other_elites, by = c("clean_name", "clean_country"))

all_elites%>%
  filter(clean_country == "USA")

all_elites%>%
  group_by(clean_country)%>%
  count()%>%
  filter(n>=5)%>%
  arrange(desc(n))
```

```{r}

USA_elites <- all_elites%>%
  filter(clean_country == "USA")

USA_elites_all<- left_join(USA_elites, df_women_c, by = c("clean_name", "clean_country"))



```

```{r}
# 
# scores <- athlete_data$Score
# all_scores = c()
# for (s in scores) {
#   std_dev <- sd(athlete_data$Score)
#   if (length(scores) == 1){
#     std_dev = 0.3
#   }
#   samples <- rnorm(n = 30, mean = s, sd = std_dev)
#   all_scores = c(all_scores, samples)
# }
# score <- sample(all_scores, size = 1)
# all_scores
# if (length(scores)==0){
#   score = 0
# }
# score
```

```{r}

```

```{r}
simulate_score_w <- function(athlete, event) {
  athlete_data <- df_women_c%>%
    filter(clean_name == athlete, Apparatus == event)
  if(nrow(athlete_data)==0){
    score = 0
    return(score)
  } else{
    scores <- athlete_data$Score
    all_scores = c()
    for (s in scores) {
      std_dev <- sd(athlete_data$Score)
      if (length(scores) == 1){
        std_dev = 0.3
        }
      samples <- rnorm(n = 30, mean = s, sd = std_dev)
      all_scores = c(all_scores, samples)
      }
    score <- sample(all_scores, size = 1)
    if (length(scores)==0){
      score = 0
      }
    return(score)
  }
}
  


simulate_score_w("Kim BUI", "VT2")
```

```{r}
women_country = c("USA", "GBR", "CAN", "CHN", "BRA", "ITA", "NED", "FRA", "JPN", "AUS", "ROU", "KOR")



```

```{r}
set.seed(21)
all_points = c()
for (athlete in all_elites$clean_name){
 
  points <- simulate_score_w(athlete, "BB")
  all_points <- c(all_points, points)
  }
  

```

```{r}
all_elites_BB <- cbind(all_elites, BB_sim = all_points)

winners_BB <- all_elites_BB%>%
  arrange(desc(BB_sim))%>%
  slice(1:3)

all_same <- all(winners_BB$clean_country == winners_BB$clean_country[1])
all_same <- TRUE
if (all_same){
  winners_BB <- all_elites_BB%>%
  arrange(desc(BB_sim))%>%
  slice(1:2, 4)
}

winners_BB
```

```{r}
set.seed(21)
event_sim <- function(event, dataset){
  all_points = c()
  for (athlete in dataset$clean_name){
   
    points <- simulate_score_w(athlete, event)
    all_points <- c(all_points, points)
    }
  all_elites_event <- cbind(dataset, event_sim = all_points)

  winners <- all_elites_event%>%
    arrange(desc(event_sim))%>%
    slice(1:3)
  
  all_same <- all(winners$clean_country == winners$clean_country[1])
  all_same <- TRUE
  if (all_same){
    winners <- all_elites_event%>%
    arrange(desc(event_sim))%>%
    slice(1:2, 4)
  }
  
  return(winners)
}
```

```{r}
event_sim("BB", all_elites)
```

```{r}
event_sim("FX", all_elites)
```

```{r}
set.seed(21)
event_sim_2 <- function(event1, event2, dataset = all_elites){
  all_points = c()
  for (athlete in dataset$clean_name){
   
    points <- simulate_score_w(athlete, event1)
    all_points <- c(all_points, points)
    }
  all_elites_event <- cbind(dataset, event_sim = all_points)
  all_points_2 <- rep(0, nrow(dataset))
   if (event2 != "None"){
    all_points_2 = c()
    #print(all_points_2)
    #print("1 issue")
    for (athlete in dataset$clean_name){
   
      points <- simulate_score_w(athlete, event2)
      all_points_2 <- c(all_points_2, points)
      #print(all_points_2)
    }
   }
  #print(length(all_points_2))
  #print(all_points_2)
  all_elites_event <- cbind(all_elites_event, event_sim_2 = all_points_2)
  all_elites_event$sum_score <- all_elites_event$event_sim + all_elites_event$event_sim_2
  #print(all_elites_event)
  

  winners <- all_elites_event%>%
    arrange(desc(sum_score))%>%
    slice(1:3)
  
  all_same <- all(winners$clean_country == winners$clean_country[1])
  all_same <- TRUE
  if (all_same){
    winners <- all_elites_event%>%
    arrange(desc(sum_score))%>%
    slice(1:2, 4)
  }
  
  return(winners)
}
```

```{r}
event_sim_2("FX", "None", all_elites)
```

```{r}
event_sim_2("VT1", "VT2", all_elites)
```

```{r}
set.seed(21)
event_sim_3 <- function(event_set, dataset = all_elites){
  all_elites_event <- dataset
  for (event in event_set){
    all_points = c()
    for (athlete in dataset$clean_name){
      points <- simulate_score_w(athlete, event)
      all_points <- c(all_points, points)
    }
    col_name <- paste("event_", event, sep= "")
    all_elites_event[, col_name] <- all_points
    
  }
  columns_to_exclude <- c("clean_name", "clean_country")
  all_elites_event$sum_score <- rowSums(all_elites_event[, !names(all_elites_event) %in% columns_to_exclude])
  winners <- all_elites_event%>%
    arrange(desc(sum_score))%>%
    slice(1:3)
  
  all_same <- all(winners$clean_country == winners$clean_country[1])
  all_same <- TRUE
  if (all_same){
    winners <- all_elites_event%>%
    arrange(desc(sum_score))%>%
    slice(1:2, 4)
  }
  
  return(winners)
  
}
   
  

```

```{r}
event_sim_3(c("VT1", "VT2", "BB", "FX"), all_elites)
```

```{r}
set.seed(21)
event_sim_3(c("BB"), all_elites)
```

Possible way to simulate for Team AA =\> simulate for apparatus and individual AA. Add these winning athletes into one dataset (maybe extend beyond just 1st - 3rd place in case we don't get enough athletes). Look at the countries that passed for qualifiers and rename clean_country as those countries and other. Pull teams from this set?
